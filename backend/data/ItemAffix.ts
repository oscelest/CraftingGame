import ItemAffix from "../entity/ItemAffix";
import ItemClass from "../entity/ItemClass";

const all = [
  "Claws", "Daggers", "Sceptres", "One Hand Swords", "One Hand Axes", "One Hand Maces", "Thrusting One Hand Swords", "Wands", "Staves", "Two Hand Swords", "Two Hand Axes", "Two Hand Maces", "Bows",
  "Helmets", "Gloves", "Boots", "Body Armours", "Shields", "Quivers", "Amulets", "Rings", "Belts",
  "Jewel", "Abyss Jewel",
];
const influencable = [
  "Claws", "Daggers", "Sceptres", "One Hand Swords", "One Hand Axes", "One Hand Maces", "Thrusting One Hand Swords", "Wands", "Staves", "Two Hand Swords", "Two Hand Axes", "Two Hand Maces", "Bows",
  "Helmets", "Gloves", "Boots", "Body Armours", "Shields", "Quivers", "Amulets", "Rings", "Belts",
];


const ele_added_chaos_or_ele_gem_level = ["Daggers", "Sceptres", "Wands", "Staves", "Shields"];
const ele_damage_prefix = ["Sceptres", "Wands", "Staves", "Shields"];
const phys_added_chaos_or_chaos_gem_level = ["Daggers", "Wands", "Staves", "Shields"];
const chaos_mult = ["Wands", "Staves"];
const spell_crit_hybrid_or_cold_mult = ["Daggers", "Sceptres", "Wands", "Staves"];
const cast_speed_or_ele_damage_suffix = ["Sceptres", "Wands", "Staves"];
const melee_weapons = ["Claws", "Daggers", "Sceptres", "One Hand Swords", "One Hand Axes", "One Hand Maces", "Thrusting One Hand Swords", "Staves", "Two Hand Swords", "Two Hand Axes", "Two Hand Maces"];
const weapons = ["Claws", "Daggers", "Sceptres", "One Hand Swords", "One Hand Axes", "One Hand Maces", "Thrusting One Hand Swords", "Wands", "Staves", "Two Hand Swords", "Two Hand Axes", "Two Hand Maces", "Bows"];
const support_gem_level_or_gem_quality = [
  "Claws", "Daggers", "Sceptres", "One Hand Swords", "One Hand Axes", "One Hand Maces", "Thrusting One Hand Swords", "Wands", "Staves", "Two Hand Swords", "Two Hand Axes", "Two Hand Maces", "Bows",
  "Shield"
];
const stat_stick = ["Helmets", "Gloves", "Boots", "Body Armours", "Shields", "Quivers", "Amulets", "Rings", "Belts"];
const high_accuracy = ["Wands", "Bows", "Helmets", "Gloves"];
const low_accuracy = [
  "Claws", "Daggers", "Sceptres", "One Hand Swords", "One Hand Axes", "One Hand Maces", "Thrusting One Hand Swords", "Staves", "Two Hand Swords", "Two Hand Axes", "Two Hand Maces",
  "Shields", "Quivers", "Amulets", "Rings",
];
const crit_chance = [
  "Claws", "Daggers", "Sceptres", "One Hand Swords", "One Hand Axes", "One Hand Maces", "Thrusting One Hand Swords", "Wands", "Staves", "Two Hand Swords", "Two Hand Axes", "Two Hand Maces", "Bows",
  "Amulets", "Rings",
];
;
const crit_mult = [
  "Claws", "Daggers", "Sceptres", "One Hand Swords", "One Hand Axes", "One Hand Maces", "Thrusting One Hand Swords", "Wands", "Staves", "Two Hand Swords", "Two Hand Axes", "Two Hand Maces", "Bows",
  "Quivers", "Amulets",
];
const flaring = [
  "Claws", "Daggers", "Sceptres", "One Hand Swords", "One Hand Axes", "One Hand Maces", "Thrusting One Hand Swords", "Wands", "Staves", "Two Hand Swords", "Two Hand Axes", "Two Hand Maces", "Bows",
  "Amulets",
];
const spell_or_global_added_damage = ["Daggers", "Sceptres", "Wands", "Staves", "Amulets", "Rings"];
const weapon_elemental_damage = [
  "Claws", "Daggers", "Sceptres", "One Hand Swords", "One Hand Axes", "One Hand Maces", "Thrusting One Hand Swords", "Wands", "Staves", "Two Hand Swords", "Two Hand Axes", "Two Hand Maces", "Bows",
  "Amulets", "Rings",
];
const armours = ["Helmets", "Gloves", "Boots", "Body Armours", "Shields"];

export default [
  async () => await new ItemAffix("Subterranean", "Delve Prefix Modifier.", await ItemClass.findByName(all)).save(),
  async () => await new ItemAffix("of the Underground", "Delve Suffix Modifier.", await ItemClass.findByName(all)).save(),
  
  async () => await new ItemAffix("Eldrich", "Elder Prefix Modifier", await ItemClass.findByName(influencable)).save(),
  async () => await new ItemAffix("of the Elder", "Elder Suffix Modifier.", await ItemClass.findByName(influencable)).save(),
  async () => await new ItemAffix("Shaped", "Shaper Prefix Modifier.", await ItemClass.findByName(influencable)).save(),
  async () => await new ItemAffix("of the Shaper", "Shaper Suffix Modifier.", await ItemClass.findByName(influencable)).save(),
  async () => await new ItemAffix("of the Veil", "Veiled Suffix Modifier.", await ItemClass.findByName(influencable)).save(),
  async () => await new ItemAffix("Veiled", "Veiled Prefix Modifier.", await ItemClass.findByName(influencable)).save(),

  async () => await new ItemAffix("Abbot's", "Flat increase of Evasion Rating.; Flat increase of maximum Life.", await ItemClass.findByName(["Helmets", "Shields"])),
  async () => await new ItemAffix("Acrobat's", "Flat increase of Evasion Rating.", await ItemClass.findByName(["Gloves", "Boots"])).save(),
  async () => await new ItemAffix("Anarchist's", "+2 to Level of Socketed Chaos Gems.", await ItemClass.findByName(phys_added_chaos_or_chaos_gem_level)).save(),
  async () => await new ItemAffix("Annealed", "Adds Physical Damage to Attacks.", await ItemClass.findByName(["Rings"])).save(),
  async () => await new ItemAffix("Athlete's", "Flat increase of maximum Life.", await ItemClass.findByName(["Gloves", "Boots", "Amulets"])).save(),
  async () => await new ItemAffix("Atrophying", "% increased Non-Ailment Chaos Damage over Time Multiplier.", await ItemClass.findByName(chaos_mult)).save(),
  async () => await new ItemAffix("Baleful", "Gain % of Physical Damage as Extra Chaos Damage.", await ItemClass.findByName(phys_added_chaos_or_chaos_gem_level)).save(),
  async () => await new ItemAffix("Blazing", "Flat increase of Energy Shield.", await ItemClass.findByName(["Helmets"])).save(),
  async () => await new ItemAffix("Burning", "Adds Fire Damage to Attacks.", await ItemClass.findByName(["Gloves"])).save(),
  async () => await new ItemAffix("Carapaced", "Flat increase of Armour.", await ItemClass.findByName(["Body Armours", "Shields"])).save(),
  async () => await new ItemAffix("Carbonising", "Adds Fire Damage to Attacks.", await ItemClass.findByName(weapons)).save(),
  async () => await new ItemAffix("Catarina's Veiled", "+1/2 to Level of Socketed Support Gems.", await ItemClass.findByName(support_gem_level_or_gem_quality)).save(),
  async () => await new ItemAffix("Cheetah's", "% increased Movement Speed.", await ItemClass.findByName(["Boots"])).save(),
  async () => await new ItemAffix("Cherub's", "Flat increase of Evasion Rating.; Flat increase of maximum Energy Shield.", await ItemClass.findByName(["Helmets"])).save(),
  async () => await new ItemAffix("Consecrated", "Flat increase of Armour.;Flat increase of Energy Shield.", await ItemClass.findByName(["Body Armours", "Shields"])).save(),
  async () => await new ItemAffix("Corrosive", "Gain % of Fire Damage as Extra Chaos Damage.", await ItemClass.findByName(ele_added_chaos_or_ele_gem_level)).save(),
  async () => await new ItemAffix("Crackling", "Adds Lightning Damage to Attacks.", await ItemClass.findByName(["Gloves", "Quivers"])).save(),
  async () => await new ItemAffix("Cremating", "Adds Fire Damage to Attacks (Amulets) or Spells (Weapons).", await ItemClass.findByName(spell_or_global_added_damage)).save(),
  async () => await new ItemAffix("Crocodile's", "Flat increase of Armour.;Flat increase of maximum Life.", await ItemClass.findByName(["Body Armours"])).save(),
  async () => await new ItemAffix("Crystalising", "Adds Cold Damage to Attacks.", await ItemClass.findByName(weapons)).save(),
  async () => await new ItemAffix("Dazzling", "Flat increase of Energy Shield.", await ItemClass.findByName(["Belts", "Amulets"])).save(),
  async () => await new ItemAffix("Devastating", "% increased Elemental Damage with Attack Skills.", await ItemClass.findByName(["Quivers", "Belts", "Amulets"])).save(),
  async () => await new ItemAffix("Dictator's", "% increased Physical Damage.;Flat increase of Accuracy Rating.", await ItemClass.findByName(weapons)).save(),
  async () => await new ItemAffix("Disintegrating", "% increased Non-Ailment Chaos Damage over Time Multiplier.", await ItemClass.findByName(chaos_mult)).save(),
  async () => await new ItemAffix("Durable", "Flat increase of Armour.;Flat increase of Evasion Rating.", await ItemClass.findByName(["Helmets"])).save(),
  async () => await new ItemAffix("Eidolon's", "Flat increase of Evasion Rating.; Flat increase of maximum Energy Shield.", await ItemClass.findByName(["Shields", "Body_armours"])).save(),
  async () => await new ItemAffix("Electrocuting", "Adds Lightning Damage to Attacks (Amulets) or Spells (Weapons).", await ItemClass.findByName(spell_or_global_added_damage)).save(),
  async () => await new ItemAffix("Elreon's Veiled", "Flat reduction of Total Mana Cost of Skills.", await ItemClass.findByName(["Rings"])).save(),
  async () => await new ItemAffix("Emperor's", "% increased Physical Damage.;Flat increase of Accuracy Rating.", await ItemClass.findByName(weapons)).save(),
  async () => await new ItemAffix("Entombing", "Adds Cold Damage to Attacks (Amulets) or Spells (Weapons).", await ItemClass.findByName(spell_or_global_added_damage)).save(),
  async () => await new ItemAffix("Enveloped", "Flat increase of Armour.", await ItemClass.findByName(["Belts"])).save(),
  async () => await new ItemAffix("Esh's", "% increased Lightning Damage.", await ItemClass.findByName(ele_damage_prefix)).save(),
  async () => await new ItemAffix("Exarch's", "Flat increase of Energy Shield.;Flat increase of maximum Life.", await ItemClass.findByName(["Body Armours"])).save(),
  async () => await new ItemAffix("Excruciating", "Gain % of Lightning Damage as Extra Chaos Damage.", await ItemClass.findByName(ele_added_chaos_or_ele_gem_level)).save(),
  async () => await new ItemAffix("Fawn's", "Flat increase of Evasion Rating.;Flat increase of maximum Life.", await ItemClass.findByName(["Gloves", "Boots"])).save(),
  async () => await new ItemAffix("Fecund", "Flat increase of maximum Life.", await ItemClass.findByName(["Quivers", "Helmets", "Belts"])).save(),
  async () => await new ItemAffix("Flaring", "Adds Physical Damage to Attacks.", await ItemClass.findByName(flaring)).save(),
  async () => await new ItemAffix("Flawless", "+3 to Level of Socketed Gems.", await ItemClass.findByName(["Rings"])).save(),
  async () => await new ItemAffix("Fleet", "Flat increase of Evasion Rating.", await ItemClass.findByName(["Helmets"])).save(),
  async () => await new ItemAffix("Flexible", "Flat increase of Armour.;Flat increase of Evasion Rating.", await ItemClass.findByName(["Gloves", "Boots"])).save(),
  async () => await new ItemAffix("Fortified", "Flat increase of Armour.", await ItemClass.findByName(["Helmets"])).save(),
  async () => await new ItemAffix("Frigid", "Adds Cold Damage to Attacks.", await ItemClass.findByName(["Quivers", "Gloves"])).save(),
  async () => await new ItemAffix("Gelid", "% increased Cold Damage over Time Multiplier.", await ItemClass.findByName(spell_crit_hybrid_or_cold_mult)).save(),
  async () => await new ItemAffix("Gravicius' Veiled", "Gain % of Maximum Life as Extra Maximum Energy Shield..", await ItemClass.findByName(["Body Armours"])).save(),
  async () => await new ItemAffix("Guff's Veiled", "% increased Damage during any Flask Effect.", await ItemClass.findByName(["Gloves"])).save(),
  async () => await new ItemAffix("Haku's Veiled", "% increased Quality of Socketed Gems.", await ItemClass.findByName(support_gem_level_or_gem_quality)).save(),
  async () => await new ItemAffix("Hallowed", "Flat increase of Armour.;Flat increase of Energy Shield.", await ItemClass.findByName(["Helmets"])).save(),
  async () => await new ItemAffix("Harbinger's", "% increased Elemental Damage.", await ItemClass.findByName(["Shields"])).save(),
  async () => await new ItemAffix("Heart-Stopping", "Adds Lightning Damage to Attacks.", await ItemClass.findByName(weapons)).save(),
  async () => await new ItemAffix("Heartstopping", "% increased Cold Damage over Time Multiplier.", await ItemClass.findByName(spell_crit_hybrid_or_cold_mult)).save(),
  async () => await new ItemAffix("Hellion's", "% increased Movement Speed.", await ItemClass.findByName(["Boots"])).save(),
  async () => await new ItemAffix("Honed", "Adds Physical Damage to Attacks.", await ItemClass.findByName(["Quivers", "Gloves"])).save(),
  async () => await new ItemAffix("Hummingbird's", "% increased Evasion Rating.;% increased Stun and Block Recovery.", await ItemClass.findByName(armours)).save(),
  async () => await new ItemAffix("Ibex's", "Flat increase of Evasion Rating.;Flat increase of maximum Life.", await ItemClass.findByName(["Body Armours"])).save(),
  async () => await new ItemAffix("Illusion's", "% increased Evasion Rating.", await ItemClass.findByName(["Shields", "Body Armours"])).save(),
  async () => await new ItemAffix("Illusory", "% increased Evasion and Energy Shield.", await ItemClass.findByName(["Gloves", "Boots", "Helmets"])).save(),
  async () => await new ItemAffix("Impenetrable", "% increased Armour.", await ItemClass.findByName(["Shields", "Body Armours"])).save(),
  async () => await new ItemAffix("Impregnable", "% increased Armour.", await ItemClass.findByName(["Gloves", "Boots", "Helmets", "Amulets"])).save(),
  async () => await new ItemAffix("Incandescent", "Flat increase of Energy Shield.", await ItemClass.findByName(["Shields"])).save(),
  async () => await new ItemAffix("Incorporeal", "% increased Evasion and Energy Shield.", await ItemClass.findByName(["Shields", "Body Armours"])).save(),
  async () => await new ItemAffix("Inspired", "% increased Armour and Energy Shield.", await ItemClass.findByName(["Gloves", "Boots", "Helmets"])).save(),
  async () => await new ItemAffix("It That Fled's Veiled", "% increased Spell Damage.; Gain % of Non-Chaos Damage as Extra Chaos Damage.", await ItemClass.findByName(weapons)).save(),
  async () => await new ItemAffix("Interpermeated", "% increased Armour and Energy Shield.", await ItemClass.findByName(["Shields", "Body Armours"])).save(),
  async () => await new ItemAffix("Korell's Veiled", "% of Physical Damage from Hits taken as Fire Damage.", await ItemClass.findByName(["Helmets"])).save(),
  async () => await new ItemAffix("Lava Caller's", "+2 to Level of Socketed Fire Gems.", await ItemClass.findByName(ele_added_chaos_or_ele_gem_level)).save(),
  async () => await new ItemAffix("Legend's", "% increased Armour and Evasion.", await ItemClass.findByName(["Gloves", "Boots", "Helmets"])).save(),
  async () => await new ItemAffix("Leo's Veiled", "% increased Damage.", await ItemClass.findByName(["Rings", "Belts"])).save(),
  async () => await new ItemAffix("Lich's", "% increased Spell Damage.;Flat increase of maximum Mana.", await ItemClass.findByName(spell_crit_hybrid_or_cold_mult)).save(),
  async () => await new ItemAffix("Malicious", "Adds Chaos Damage to Attacks.", await ItemClass.findByName(weapons)).save(),
  async () => await new ItemAffix("Mammoth's", "% increased Armour.;% increased Stun and Block Recovery.", await ItemClass.findByName(armours)).save(),
  async () => await new ItemAffix("Merciless", "% increased Physical Damage.", await ItemClass.findByName(weapons)).save(),
  async () => await new ItemAffix("Mirage's", "% increased Evasion Rating.", await ItemClass.findByName(["Gloves", "Boots", "Helmets"])).save(),
  async () => await new ItemAffix("Mortifying", "Gain % of Cold Damage as Extra Chaos Damage.", await ItemClass.findByName(ele_added_chaos_or_ele_gem_level)).save(),
  async () => await new ItemAffix("Nautilus's", "Flat increase of Armour.;Flat increase of maximum Life.", await ItemClass.findByName(["Shields", "Helmets"])).save(),
  async () => await new ItemAffix("Necromancer's", "+3 to Level of Socketed Minion Gems.", await ItemClass.findByName(["Helmets"])).save(),
  async () => await new ItemAffix("of Aisling's Veil", "% increased Chaos Damage; % increased Physical Damage.", await ItemClass.findByName(["Rings"])).save(),
  async () => await new ItemAffix("of Arcing", "% increased Lightning Damage.", await ItemClass.findByName(cast_speed_or_ele_damage_suffix)).save(),
  async () => await new ItemAffix("of Ashes", "% increased Fire Damage.", await ItemClass.findByName(cast_speed_or_ele_damage_suffix)).save(),
  async () => await new ItemAffix("of Bameth", "% increased Chaos Resistance.", await ItemClass.findByName(stat_stick)).save(),
  async () => await new ItemAffix("of Blocking", "% increased Chance to Block.", await ItemClass.findByName(["Shields"])).save(),
  async () => await new ItemAffix("of Cameria's Veil", "% increased Critical Strike Multiplier if you've Shattered an Enemy Recently; % increased Global Critical Strike Chance.", await ItemClass.findByName(["Rings"])).save(),
  async () => await new ItemAffix("of Celebration", "% increased Attack Speed.", await ItemClass.findByName(melee_weapons)).save(),
  async () => await new ItemAffix("of Destruction", "% increased Global Critical Strike Multiplier.", await ItemClass.findByName(crit_mult)).save(),
  async () => await new ItemAffix("of Discharge", "% increased Lightning Damage.", await ItemClass.findByName(["Amulets"])).save(),
  async () => await new ItemAffix("of Ephij", "% increased Lightning Resistance.", await ItemClass.findByName(stat_stick)).save(),
  async () => await new ItemAffix("of Excavation", "% increased Rarity of Items found.", await ItemClass.findByName(["Rings", "Amulets"])).save(),
  async () => await new ItemAffix("of Expertise", "% increased Cast Speed.", await ItemClass.findByName(["Shields", "Amulets"])).save(),
  async () => await new ItemAffix("of Exuberance", "% of Energy Shield Regenerated per second.", await ItemClass.findByName(["Body Armours"])).save(),
  async () => await new ItemAffix("of Finesse", "% increased Cast Speed.", await ItemClass.findByName(cast_speed_or_ele_damage_suffix)).save(),
  async () => await new ItemAffix("of Flames", "% increased Fire Damage.", await ItemClass.findByName(["Rings"])).save(),
  async () => await new ItemAffix("of Floe", "% increased Cold Damage.", await ItemClass.findByName(["Amulets"])).save(),
  async () => await new ItemAffix("of Fog", "% chance to Dodge Attack Hits.", await ItemClass.findByName(["Shields", "Body Armours"])).save(),
  async () => await new ItemAffix("of Glaciation", "% increased Cold Damage.", await ItemClass.findByName(cast_speed_or_ele_damage_suffix)).save(),
  async () => await new ItemAffix("of Grandmastery", "% increased Attack Speed.", await ItemClass.findByName(["Gloves"])).save(),
  async () => await new ItemAffix("of Haast", "% increased Cold Resistance.", await ItemClass.findByName(stat_stick)).save(),
  async () => await new ItemAffix("of Haste", "% increased Attack and Cast Speed.", await ItemClass.findByName(["Shields"])).save(),
  async () => await new ItemAffix("of Hillock's Veil", "% increased Attributes.", await ItemClass.findByName(["Body Armours"])).save(),
  async () => await new ItemAffix("of Immolation", "% increased Fire Damage.", await ItemClass.findByName(["Amulets"])).save(),
  async () => await new ItemAffix("of Immortality", "% of Life Regenerated per second.", await ItemClass.findByName(["Shields"])).save(),
  async () => await new ItemAffix("of Incantations", "% chance to Dodge Spell Hits.", await ItemClass.findByName(["Shields"])).save(),
  async () => await new ItemAffix("of Incision", "% increased Critical Strike Chance.", await ItemClass.findByName(crit_chance)).save(),
  async () => await new ItemAffix("of Janus' Veil", "% increased Rarity of Items Dropped by Slain Rare or Unique Enemies.", await ItemClass.findByName(["Helmets"])).save(),
  async () => await new ItemAffix("of Jorgin's Veil", "10% Chance to Trigger Level 18 Summon Spectral Wolf on Kill.", await ItemClass.findByName(["Amulets"])).save(),
  async () => await new ItemAffix("of Lioneye", "Flat increase of Accuracy Rating.", await ItemClass.findByName(high_accuracy)).save(),
  async () => await new ItemAffix("of Mastery", "% increased Attack Speed.", await ItemClass.findByName(["Quivers", "Shields"])).save(),
  async () => await new ItemAffix("of Numbing", "% additional Physical Damage Reduction.", await ItemClass.findByName(["Body Armours"])).save(),
  async () => await new ItemAffix("of Overflowing", "% increased Flask Charges gained.", await ItemClass.findByName(["Belts"])).save(),
  async () => await new ItemAffix("of Rending", "% increased Critical Strike Chance.", await ItemClass.findByName(["Quivers"])).save(),
  async () => await new ItemAffix("of Renown", "% increased Attack Speed.", await ItemClass.findByName(["Wands", "Bows"])).save(),
  async () => await new ItemAffix("of Revitalization", "Flat Life gained on Block.", await ItemClass.findByName(["Shields"])).save(),
  async () => await new ItemAffix("of Riker's Veil", "% increased Fire Damage; % increased Lightning Damage.", await ItemClass.findByName(["Rings"])).save(),
  async () => await new ItemAffix("of Rime", "% increased Cold Damage.", await ItemClass.findByName(["Rings"])).save(),
  async () => await new ItemAffix("of Sanctuary", "% increased Chance to Block Projectile Attack Damage.", await ItemClass.findByName(["Shields"])).save(),
  async () => await new ItemAffix("of Skill", "% increased Attack Speed.", await ItemClass.findByName(["Rings"])).save(),
  async () => await new ItemAffix("of Talent", "% increased Cast Speed.", await ItemClass.findByName(["Rings"])).save(),
  async () => await new ItemAffix("of the Blur", "Flat increase of Dexterity.", await ItemClass.findByName(["Gloves"])).save(),
  async () => await new ItemAffix("of the Bulwark", "% increased Chance to Block Spell Damage.", await ItemClass.findByName(["Shields"])).save(),
  async () => await new ItemAffix("of the Genius", "Flat increase of Intelligence.", await ItemClass.findByName(stat_stick)).save(),
  async () => await new ItemAffix("of the Gods", "Flat increase of Strength.", await ItemClass.findByName(stat_stick)).save(),
  async () => await new ItemAffix("of the Godslayer", "Flat increase of Strength.", await ItemClass.findByName(["Belts"])).save(),
  async () => await new ItemAffix("of the Multiverse", "Flat increase of all Attributes.", await ItemClass.findByName(["Amulets"])).save(),
  async () => await new ItemAffix("of the Polymath", "Flat increase of Intelligence.", await ItemClass.findByName(["Helmets"])).save(),
  async () => await new ItemAffix("of the Rainbow", "% increased all Resistance.", await ItemClass.findByName(["Rings"])).save(),
  async () => await new ItemAffix("of the Ranger", "Flat increase of Accuracy Rating.", await ItemClass.findByName(low_accuracy)).save(),
  async () => await new ItemAffix("of the Span", "% increased all Resistance.", await ItemClass.findByName(["Shields", "Amulets"])).save(),
  async () => await new ItemAffix("of the Wind", "Flat increase of Dexterity.", await ItemClass.findByName(stat_stick)).save(),
  async () => await new ItemAffix("of Tzteosh", "% increased Fire Resistance.", await ItemClass.findByName(stat_stick)).save(),
  async () => await new ItemAffix("of Unmaking", "% increased Critical Strike Chance for Spells.", await ItemClass.findByName(spell_crit_hybrid_or_cold_mult)).save(),
  async () => await new ItemAffix("of Utilisation", "Flat Mana gained on Block.", await ItemClass.findByName(["Shields"])).save(),
  async () => await new ItemAffix("of Voltage", "% increased Lightning Damage.", await ItemClass.findByName(["Rings"])).save(),
  async () => await new ItemAffix("Overpowering", "% increased Elemental Damage with Attack Skills.", await ItemClass.findByName(weapon_elemental_damage)).save(),
  async () => await new ItemAffix("Paragon's", "+1 to Level of Socketed Gems.", await ItemClass.findByName(weapons)).save(),
  async () => await new ItemAffix("Perandus'", "% increased Rarity of Items Found.", await ItemClass.findByName(["Rings", "Amulets"])).save(),
  async () => await new ItemAffix("Phased", "Flat increase of Evasion Rating.", await ItemClass.findByName(["Shields", "Body Armours"])).save(),
  async () => await new ItemAffix("Predator's", "% increased Attack Damage.", await ItemClass.findByName(["Shields"])).save(),
  async () => await new ItemAffix("Prime", "Flat increase of maximum Life.", await ItemClass.findByName(["Body Armours"])).save(),
  async () => await new ItemAffix("Prior's", "Flat increase of Evasion Rating.;Flat increase of maximum Life.", await ItemClass.findByName(["Gloves", "Boots"])).save(),
  async () => await new ItemAffix("Ram's", "Flat increase of Evasion Rating.;Flat increase of maximum Life.", await ItemClass.findByName(["Shields", "Helmets"])).save(),
  async () => await new ItemAffix("Resilient", "Flat increase of Armour.;Flat increase of Evasion Rating.", await ItemClass.findByName(["Shields", "Body Armours"])).save(),
  async () => await new ItemAffix("Resplendent", "Flat increase of Energy Shield.", await ItemClass.findByName(["Body Armours", "Rings"])).save(),
  async () => await new ItemAffix("Ribbed", "Flat increase of Armour.", await ItemClass.findByName(["Gloves", "Boots"])).save(),
  async () => await new ItemAffix("Rin's Veiled", "Cannot be Frozen.", await ItemClass.findByName(["Boots"])).save(),
  async () => await new ItemAffix("Runic", "% increased Spell Damage.", await ItemClass.findByName(ele_added_chaos_or_ele_gem_level)).save(),
  async () => await new ItemAffix("Sanctified", "Flat increase of Armour.;Flat increase of Energy Shield.", await ItemClass.findByName(["Gloves", "Boots"])).save(),
  async () => await new ItemAffix("Seething", "Flat increase of Energy Shield.", await ItemClass.findByName(["Boots"])).save(),
  async () => await new ItemAffix("Seraphim's", "% increased Energy Shield.;% increased Stun and Block Recovery.", await ItemClass.findByName(armours)).save(),
  async () => await new ItemAffix("Sharpshooter's", "+2 to Level of Socketed Bow Gems.", await ItemClass.findByName(["Bows"])).save(),
  async () => await new ItemAffix("Sylph's", "Flat increase of Evasion Rating.; Flat increase of maximum Energy Shield.", await ItemClass.findByName(["Gloves", "Boots"])).save(),
  async () => await new ItemAffix("Tempest King's", "+2 to Level of Socketed Lightning gems.", await ItemClass.findByName(ele_added_chaos_or_ele_gem_level)).save(),
  async () => await new ItemAffix("Tora's Veiled", "Adds Physical Damage to Attacks; 40% chance to cause Bleeding on Hit.", await ItemClass.findByName(weapons)).save(),
  async () => await new ItemAffix("Tul's", "% increased Cold Damage.", await ItemClass.findByName(ele_damage_prefix)).save(),
  async () => await new ItemAffix("Tyrannical", "% increased Physical Damage.", await ItemClass.findByName(weapons)).save(),
  async () => await new ItemAffix("Unassailable", "% increased Energy Shield.", await ItemClass.findByName(["Gloves", "Boots", "Helmets", "Amulets"])).save(),
  async () => await new ItemAffix("Unfailing", "% increased Armour.;% increased Chance to Block.", await ItemClass.findByName(["Shields"])).save(),
  async () => await new ItemAffix("Unfaltering", "% increased Energy Shield.", await ItemClass.findByName(["Body Armours"])).save(),
  async () => await new ItemAffix("Urchin's", "Flat increase of Armour.;Flat increase of maximum Life.", await ItemClass.findByName(["Gloves", "Boots"])).save(),
  async () => await new ItemAffix("Vagan's Veiled", "Hits can't be evaded.", await ItemClass.findByName(weapons)).save(),
  async () => await new ItemAffix("Vorici's Veiled", "% increased Damage while Leeching.", await ItemClass.findByName(["Gloves", "Amulets"])).save(),
  async () => await new ItemAffix("Vaporous", "% increased Evasion Rating.", await ItemClass.findByName(["Gloves", "Boots", "Rings", "Amulets"])).save(),
  async () => await new ItemAffix("Victor's", "% increased Armour and Evasion.", await ItemClass.findByName(["Shields", "Body Armours"])).save(),
  async () => await new ItemAffix("Vigorous", "Flat increase of maximum Life.", await ItemClass.findByName(["Shields"])).save(),
  async () => await new ItemAffix("Virile", "Flat increase of maximum Life.", await ItemClass.findByName(["Rings"])).save(),
  async () => await new ItemAffix("Weaponmaster's", "+2 to Level of Socketed Melee Gems.", await ItemClass.findByName(melee_weapons)).save(),
  async () => await new ItemAffix("Winterbringer's", "+2 to Level of Socketed Cold Gems.", await ItemClass.findByName(ele_added_chaos_or_ele_gem_level)).save(),
  async () => await new ItemAffix("Wizard's", "% increased Spell Damage.", await ItemClass.findByName(["Amulets"])).save(),
  async () => await new ItemAffix("Xoph's", "% increased Fire Damage.", await ItemClass.findByName(ele_damage_prefix)).save(),
];
